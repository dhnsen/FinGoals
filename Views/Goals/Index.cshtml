@model GoalIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<p>
    <a asp-action="Create">Add a Goal!</a>
</p>
<h4>Amount Saved:</h4>
<button id="update-amount">Update Amount</button>
<button id="get-amount">Get Amount</button>
<br><br>
<div id="amount-saved"></div>

<div id="goals-section">
    @{

        var savingsToDistribute = Model.UserTotalSavings;

        var totalSavingsRequired = 0.0;

        foreach (var goal in Model.Goals)
        {
            totalSavingsRequired += goal.Amount;
            var amountSaved = 0.0;
            if (goal.Amount < savingsToDistribute)
            {
                amountSaved = goal.Amount;
                savingsToDistribute -= amountSaved;
            }
            else
            {
                amountSaved = savingsToDistribute;
                savingsToDistribute = 0;
            }
            var percentSaved = amountSaved / goal.Amount;
            var barWidth = percentSaved * 100;
            if (barWidth == 0)
            {
                barWidth = 1;
            }
            string barStyle = "bg-danger";

            if (barWidth > 24)
            {
                barStyle = "bg-warning";
            }
            if (barWidth > 74)
            {
                barStyle = "bg-success";
            }

            <div class="goal-container">
                <div class="goal-container-info">
                    <h3 class="goal-title">@Html.DisplayFor(modelItem => goal.Name)</h3>
                    <p class="goal-amount-paid"><strong>$@amountSaved of $@Html.DisplayFor(modelItem => goal.Amount)</strong></p>
                </div>
                <br>
                <br>
                <div class="goal-container-progress">
                    <div class="progress">
                        <div class="progress-bar @barStyle" role="progressbar" style="width: @barWidth%" aria-valuenow="@barWidth"
                             aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
                <div>

                    <a asp-action="Edit" asp-route-id="@goal.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@goal.Id">Delete</a>
                </div>
            </div>
            <br />
        }
        <div id="savings-amount"><h3>
    Total Saved: $@Model.UserTotalSavings of $@totalSavingsRequired
</h3></div>
    }
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script>
    
    let savingsAmount;

    //update amount
    const getSavingsAmount = function() {
        let xhr = new XMLHttpRequest();
        xhr.open('GET', 'https://localhost:5001/api/SavingsAmount', true);

        xhr.onload = function(){
            if(this.status == 200){
                savingsAmount = JSON.parse(this.responseText);
                console.log(savingsAmount)
            }
        }
        xhr.send();
    }

    const updateSavingsAmount = function() {
        xhr = new XMLHttpRequest();
        let json = JSON.stringify(savingsAmount);
        xhr.open('PUT', 'https://localhost:5001/api/SavingsAmount');
        xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
        xhr.onload = function(){
            console.log(xhr.status)
        }
        xhr.send(json);
    }

    document.getElementById('get-amount').addEventListener('click',
    getSavingsAmount);
    document.getElementById('update-amount').addEventListener('click',
    updateSavingsAmount);

    $(document).ready(getSavingsAmount);
</script>
